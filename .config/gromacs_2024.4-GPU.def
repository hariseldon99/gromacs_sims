Bootstrap: library   
From: ubuntu:22.04
Stage: build

%labels
  APPLICATION GROMACS_2024.4-GPU
  AUTHOR Analabha Roy
  EMAIL daneel@utexas.edu
  YEAR 2024

%help
  This container can do MD with GROMACS on nVidia GPU (cuda-11.8+).
    1. Can also view molecular structures with nglview.
    2. Post processing with mdanalysis and mdtraj are also possible.
    3. To start interactive jupyter session, run:
        'singularity run --nv -B${PWD}:/host_pwd --pwd /host_pwd <path-to-sif-image>'

  Miniforge3 python packages installed: 
    1.  python-3.10
    2.  acpype
    3.  ambertools
    2.  biopython
    3.  cudatoolkit
    4.  gromacs==2024.4=nompi_cuda_h5cb645a_4
    5.  gromacs_py
    6.  h5py
    7.  nbconvert
    8.  openbabel
    9.  pdb2pqr
    10. seaborn
    11. mdanalysis==2.8.0
    12. scienceplots
    13. NetworkX==2.3
    14. nglview==3.1.4
    15. mdtraj
  Extra python packages installed:
    1.  cgenff_charmm2gmx_py3_nx2.py from https://github.com/Lemkul-Lab/cgenff_charmm2gmx
%environment
  TZ=UTC
  DEBIAN_FRONTEND=noninteractive
  MPLCONFIGDIR=$HOME/.matplotlib
  export TZ=UTC
  export DEBIAN_FRONTEND=noninteractive
  export MPLCONFIGDIR=$HOME/.matplotlib

%runscript
  #!/bin/bash
  export TZ=UTC
  export DEBIAN_FRONTEND=noninteractive
  export MPLCONFIGDIR=$HOME/.matplotlib

  # Define the custom path for the Jupyter configuration file
  CONFIG_FILE_PATH="$HOME/.jupyter/singularity/jupyter_notebook_config.py"
  # Generate Jupyter configuration file at the custom path
  jupyter notebook --generate-config -y --config="$CONFIG_FILE_PATH"

  # Update the configuration file
  echo "c.NotebookApp.ip = '0.0.0.0'" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.port = 8888" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.open_browser = False" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.token = ''" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.allow_origin = '*'" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.disable_check_xsrf = True " >> "$CONFIG_FILE_PATH"
  echo "Notebook configuration updated successfully at $CONFIG_FILE_PATH."
  echo "==========================================================================================="
  echo "Starting Notebook server on $HOSTNAME. To connect to it thru an HPC, SSH tunnel as follows:"
  echo "$ ssh -v -N $USER@$HOSTNAME -J $USER@<login-node> -L 8888:$HOSTNAME:8888"
  echo "For direct connection, SSH tunnel as follows:"
  echo "$ ssh -v -N $USER@$HOSTNAME -L 8888:$HOSTNAME:8888"
  echo "If running locally, just fire up a browser and follow the instructions below"
  echo "==========================================================================================="

  #Run notebook
  jupyter notebook -y --config="$CONFIG_FILE_PATH"

%post
  export MPLCONFIGDIR=$HOME/.matplotlib
  export TZ=UTC
  export DEBIAN_FRONTEND=noninteractive
  mkdir -p $MPLCONFIGDIR

  # Update, install and cleanup of system packages needed at run-time
  apt-get update -y
  apt-get upgrade -y
  apt-get -y install build-essential wget ca-certificates git dos2unix zsh
  apt-get -y install dvipng texlive-latex-extra texlive-fonts-recommended cm-super
  rm -rf /var/lib/apt/lists/*
  apt-get clean

  # Install Miniforge3
  wget "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"
  /bin/bash ./Miniforge3-Linux-x86_64.sh -bfp /usr/local
  conda config --file /.condarc --add channels defaults
  conda config --file /.condarc --add channels conda-forge
  conda config --file /.condarc --add channels bioconda
  conda config --file /.condarc --add channels salilab
  conda update conda -y

  # Install Miniforge3 python packages
  conda install -c bioconda -c conda-forge -c salilab gromacs_py gromacs==2024.4=nompi_cuda_h5cb645a_0 mdanalysis==2.8.0 scienceplots ambertools acpype openbabel pdb2pqr nglview==3.1.4 mdtraj seaborn dssp ipyparallel -y

  # Download the latest CHARMM force field and replace the outdated 2017 one
  wget "https://mackerell.umaryland.edu/download.php?filename=CHARMM_ff_params_files/charmm36-jul2022.ff.tgz" -O charmm36-jul2017.ff.tgz

  # Remove the outdated CHARMM force field
  rm -rf /usr/local/lib/python3.12/site-packages/gromacs_py/gmx/template/charmm36-jul2017
  # Extract the downloaded tarball
  tar -xzf charmm36-jul2017.ff.tgz
  # Move the extracted CHARMM force field to the appropriate directory
  mv charmm36-jul2017.ff /usr/local/lib/python3.12/site-packages/gromacs_py/gmx/template/
  # Clean up
  rm charmm36-jul2017.ff.tgz

  # Install cgenff_charmm2gmx_py3_nx2.py
  conda create --name cgenff python==3.5.2 networkx==2.3 -y
  git clone https://github.com/hariseldon99/cgenff_charmm2gmx 
  dos2unix cgenff_charmm2gmx/cgenff_charmm2gmx_py3_nx2.py
  cp cgenff_charmm2gmx/cgenff_charmm2gmx_py3_nx2.py /usr/local/envs/cgenff/bin/
  chmod +x "/usr/local/envs/cgenff/bin/cgenff_charmm2gmx_py3_nx2.py"

  # Initialize conda
  /usr/local/condabin/conda init bash

  # Create the script that can run cgenff_charmm2gmx_py3_nx2 inside the conda environment
  cat > /usr/local/bin/cgenff_charmm2gmx << 'EOF'
#!/bin/bash
/usr/local/bin/conda init bash
source /usr/local/bin/activate cgenff
python /usr/local/envs/cgenff/bin/cgenff_charmm2gmx_py3_nx2.py "$@"
EOF

  # Make the script executable
  chmod +x /usr/local/bin/cgenff_charmm2gmx

  rm -rf cgenff_charmm2gmx Miniforge3-Linux-x86_64.sh


