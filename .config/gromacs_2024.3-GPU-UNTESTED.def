Bootstrap: library   
From: ubuntu:22.04
Stage: build

%labels
  APPLICATION GROMACS_2024.2-GPU
  AUTHOR Analabha Roy
  EMAIL daneel@utexas.edu
  YEAR 2024

%help
  This container can do MD with GROMACS on nVidia GPU (cuda-11.8+).
    1. Can also view molecular structures with nglview.
    2. Post processing with mdanalysis is also possible.
    3. To start interactive jupyter session, run:
        'singularity run --nv -B${PWD}:/host_pwd --pwd /host_pwd <path-to-sif-image>'

  Miniforge3 python packages installed: 
    1.  python-3.10
    2.  acpype
    3.  ambertools
    2.  biopython
    3.  cudatoolkit==11.8
    4.  gromacs==2024.3=nompi_cuda_h5cb645a_1
    5.  gromacs_py
    6.  h5py
    7.  nbconvert
    8.  mdanalysis==2.8.0-dev0
    9.  nglview
    10. openbabel
    11. pdb2pqr
    12. seaborn

%environment
  export MPLCONFIGDIR=$HOME/.matplotlib

%runscript
  #!/bin/bash

  # Define the custom path for the Jupyter configuration file
  CONFIG_FILE_PATH="$HOME/.jupyter/singularity/jupyter_notebook_config.py"
  # Generate Jupyter configuration file at the custom path
  jupyter notebook --generate-config -y --config="$CONFIG_FILE_PATH"

  # Update the configuration file
  echo "c.NotebookApp.ip = '0.0.0.0'" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.port = 8888" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.open_browser = False" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.token = ''" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.allow_origin = '*'" >> "$CONFIG_FILE_PATH"
  echo "c.NotebookApp.disable_check_xsrf = True " >> "$CONFIG_FILE_PATH"
  echo "Notebook configuration updated successfully at $CONFIG_FILE_PATH."
  echo "==========================================================================================="
  echo "Starting Notebook server on $HOSTNAME. To connect to it thru an HPC, SSH tunnel as follows:"
  echo "$ ssh -v -N $USER@$HOSTNAME -J $USER@<login-node> -L 8888:$HOSTNAME:8888"
  echo "For direct connection, SSH tunnel as follows:"
  echo "$ ssh -v -N $USER@$HOSTNAME -L 8888:$HOSTNAME:8888"
  echo "If running locally, just fire up a browser and follow the instructions below"
  echo "==========================================================================================="

  #Run notebook
  jupyter notebook -y --config="$CONFIG_FILE_PATH"

%post
  export MPLCONFIGDIR=$HOME/.matplotlib
  mkdir -p $MPLCONFIGDIR
  # Update, install and cleanup of system packages needed at run-time
  apt-get update -y
  apt-get upgrade -y
  apt-get -y install build-essential \
  	wget ca-certificates \
	git \
	texlive \
	texlive-extra-utils \
	texlive-font-utils \
	texlive-fonts-extra \
	texlive-fonts-extra-links \
	texlive-fonts-recommended \
	texlive-lang-english \
	texlive-latex-base \
	texlive-latex-extra \
	texlive-latex-recommended \
	texlive-science
  rm -rf /var/lib/apt/lists/*
  apt-get clean
  wget "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"
  /bin/bash ./Miniforge3-Linux-x86_64.sh -bfp /usr/local
  conda config --file /.condarc --add channels defaults
  conda config --file /.condarc --add channels conda-forge
  conda config --file /.condarc --add channels bioconda
  conda update conda -y
  conda install -c bioconda -c conda-forge nglview gromacs_py gromacs==2024.3=nompi_cuda_h5cb645a_1 pykernel pycairo wxpython -y
  mkdir -p /usr/local/src
  cd /usr/local/src/
  git clone --depth=1 https://github.com/MDAnalysis/mdanalysis.git
  cd mdanalysis
  pip install package/
