Bootstrap: docker   
From: nvidia/cuda:12.0.0-devel-ubuntu22.04
Stage: build

%labels
  APPLICATION AMDock
  AUTHOR Analabha Roy
  EMAIL daneel@utexas.edu
  YEAR 2025

%files

%environment
  TZ=UTC
  DEBIAN_FRONTEND=noninteractive
  export TZ=UTC
  export DEBIAN_FRONTEND=noninteractive
  

%runscript
  #!/bin/bash
  export TZ=UTC
  export DEBIAN_FRONTEND=noninteractive
  exec AMDock "$@"

%post
  export VINA_URL="https://github.com/ccsb-scripps/AutoDock-Vina/releases/download/v1.2.7/vina_1.2.7_linux_x86_64"
  export VINA_SPLIT_URL="https://github.com/ccsb-scripps/AutoDock-Vina/releases/download/v1.2.7/vina_split_1.2.7_linux_x86_64"

  export MINIFORGE_URL="https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"
  export CMAKEURL="https://github.com/Kitware/CMake/releases/download/v3.31.7/cmake-3.31.7-linux-x86_64.sh"
  export GNINA_URL="https://github.com/gnina/gnina/releases/download/v1.3/gnina"

  export TZ=UTC
  export DEBIAN_FRONTEND=noninteractive
  
  mkdir -p /usr/src
  # Update, install and cleanup of system packages needed at run-time
  apt-get update -y
  apt-get upgrade -y
  apt-get -y install xauth build-essential wget ca-certificates git curl dos2unix zsh libboost-all-dev libeigen3-dev libgoogle-glog-dev libprotobuf-dev protobuf-compiler libhdf5-dev libatlas-base-dev libjsoncpp-dev swig

  # Install Miniforge3
  wget $MINIFORGE_URL -O Miniforge3-Linux-x86_64.sh
  /bin/bash ./Miniforge3-Linux-x86_64.sh -bfp /usr/local
  conda config --file /.condarc --add channels defaults
  conda config --file /.condarc --add channels conda-forge
  conda config --file /.condarc --add channels bioconda
  conda config --file /.condarc --add channels salilab
  conda update conda -y
  conda update mamba -y
  rm Miniforge3-Linux-x86_64.sh

  # Downgrade Python to 3.9.20
  conda install -y python=3.9.20
  pip3 install --upgrade pip
  

  # Install MPI and AMDock
  mamba install -c bioconda -c conda-forge -c salilab -y pymol-open-source pdb2pqr mpi4py rdkit biopython numpy autodock autodock-vina scipy matplotlib seaborn pandas scikit-learn ipywidgets ipython ipykernel nbconvert nbformat terminado traitlets json5 glob2 requests pydot pydotplus py3Dmol nb_conda_kernels pytest
  python3 -m pip install pdb2pqr PyQt5
  python3 -m pip install git+https://github.com/Valdes-Tresanco-MS/AutoDockTools_py3
  python3 -m pip install AMDock
  python3 -m pip install importmonkey
  pip3 install scikit-image pyquaternion six
  pip3 install torch torchvision torchaudio
  # Download and install pre-compiled release of AutoDock Vina
  wget $VINA_URL -O /usr/local/bin/vina
  chmod +x /usr/local/bin/vina
  wget $VINA_SPLIT_URL -O /usr/local/bin/vina_split
  chmod +x /usr/local/bin/vina_split
  
  # Install the latest CMake 3.0
  wget $CMAKEURL -O cmake-3.31.7-linux-x86_64.sh
  chmod +x cmake-3.31.7-linux-x86_64.sh
  ./cmake-3.31.7-linux-x86_64.sh --skip-license --prefix=/usr/local
  rm cmake-3.31.7-linux-x86_64.sh
 
  # Install OpenBabel3. Note there are errors in bond order determination in version 3.1.1 and older.
  export CUDACXX=/usr/local/cuda/bin/nvcc
  export PATH=$PATH:/usr/local/cuda/bin
  cd /usr/src/
  git clone https://github.com/openbabel/openbabel.git
  cd openbabel
  mkdir build
  cd build
  cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON ..
  make -j8
  make install
  
  # Install gnina
  wget $GNINA_URL -O /usr/local/bin/gnina
  chmod +x /usr/local/bin/gnina
  # Compile keeps failing due to multiple dependency issues that are not documented.
  #cd /usr/src/
  #git clone https://github.com/gnina/gnina.git
  #cd gnina
  #mkdir build
  #cd build
  #cmake -DCMAKE_CUDA_ARCHITECTURES=all ..
  #make -j8
  #make install
  
  # Cleanup unnecessary files to reduce image size
  mamba clean -y --all
  pip cache purge
  rm -rf /var/lib/apt/lists/*
  apt-get clean
  rm -rf /root/.cache
  rm -rf /usr/local/pkgs
  rm -rf /usr/src/openbabel