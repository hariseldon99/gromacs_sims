#!/bin/bash
#----------------------------------------------------------
# Job name
#PBS -N md_prod
# queue select
#PBS -q workq
#PBS -l nodes=kuhpcgn2
#PBS -l ncpus=48
#PBS -l mpiprocs=48
# Name of stdout output file (default)
#PBS -o mdsim.out 
# stdout output file
#PBS -j oe
#PBS -l walltime=96:00:00 
#----------------------------------------------------------

# List of simulation directories

CONDA_ENV_NAME="biobb_wf_protein-complex_md_setup"
COMPLEX_FILENAME=$HOME/gitrepos/gromacs_sims/E6_E6AP_Sildenafil/E6AP/E6AP_VIA_complex.pdb
LIGNAME="VIA"
OUTDIR="E6AP_VIA_MD"
EM_STEPS=25000
MD_STEPS=100000000
export PBS_NCPUS=$(wc -l $PBS_NODEFILE | awk '{print $1}')

#Start time
start=`date +%s.%N`
# Change to submission directory
cd $PBS_O_WORKDIR
#Load basic OHPC tools
module load ohpc
#Load cuda
module load cuda

export PYFILE=$HOME/gitrepos/gromacs_sims/scripts/biobb_protein_ligand_simulation.py

echo "Starting"
echo '---------------------------------------------'

conda run -n $CONDA_ENV_NAME $PYFILE --input_structure $COMPLEX_FILENAME --ligand_code $LIGNAME --outdir $OUTDIR --nprocs $OMP_NUM_THREADS --usegpu --em_steps $EM_STEPS --md_steps $MD_STEPS

#End time
end=`date +%s.%N`

echo "NUM_CPUS= ${PBS_NCPUS}"
RUNTIME=$( echo "$end - $start" | bc -l )

echo '---------------------------------------------'
echo "Runtime: "$RUNTIME" sec"
echo '---------------------------------------------'

# Define login node
LOGIN_NODE="kuhpchn"

# Define the ntfy.sh URL
NTFY_URL="https://ntfy.sh/kuhpchn"

# Define the message payload
MESSAGE="Job '$PBS_JOBID' finished on kuhpchn in '$RUNTIME' secs. Check output @ '$PBS_O_WORKDIR'"

# SSH into the login node and execute the curl command remotely
ssh "$LOGIN_NODE" "curl -X POST -d \"$MESSAGE\" \"$NTFY_URL\""
